#!/bin/bash
#
# Provides:               ssh-server
# Short-Description:      connect with ssh to cluster server & containers inside
# Description:            connect with ssh to cluster server & containers inside

######################## GLOBAL FUNCTIONS
#S_TRACE=debug

S_GLOBAL_FUNCTIONS="${S_GLOBAL_FUNCTIONS:-/usr/local/bs/inc-functions.sh}"
! . "${S_GLOBAL_FUNCTIONS}" && echo -e "[error] - Unable to source file '${S_GLOBAL_FUNCTIONS}' from '${BASH_SOURCE[0]}'" && exit 1

########################  FUNCTION

# connect to server
__ssh() {
    if [ "$2" == "${_IPTHIS}" ]; then
    	_exite "You try to connect to yourself"
    else
    	ssh -o ConnectTimeout=$timeout "$1"@"$2" -p"$3"
    fi
    exit
}

########################  INIT

declare -A ips
declare -A ports
declare -A users
timeout=3

########################  MAIN

# containers access
for id in ${!S_CLUSTER[*]}; do
	eval ${S_CLUSTER[$id]}
	ips[$id]="$s_ip"
	ports[$id]="$s_port"
	users[$id]="$s_user"

	# direct connection
	if [ "$1" ]; then
		if [[ "$1" = "${s_name}" || "$1" = "${s_ip}" ]]; then
			__ssh "${s_user}" "$id" "$s_port"
			_exit
		fi

	# get data for menu
	else
		if ssh -o ConnectTimeout=3 -p ${s_port} ${s_user}@${s_ip} 'type vzctl >/dev/null 2>&1'; then

			while read ctid ctname; do
				if [[ "${ctid}" && "${ctname}" ]]; then
					ips[${id}.${name}.${ctid}]="${s_ip}"
					ports[${id}.${name}.${ctid}]="$S_HOST_PORT_PRE_SSH${ctid}"
					users[${id}.${name}.${ctid}]="$S_HOST_PORT_PRE_SSH${ctid}"
				fi

				# direct connection to server
				if [[ "$1" = "${name}.${ctid}" || "$1" = "${id}.${ctid}" ]]; then __ssh "${s_user}" "${s_ip}" "${S_HOST_PORT_PRE_SSH}${ctid}"; fi
			done <<< "$(ssh -o ConnectTimeout=3 -p ${s_port} ${s_user}@${s_ip} 'vzlist -Ho ctid,hostname')"

		fi

	fi
done

_menu "Select a VM" $(tr " " "\n" <<<${!ips[*]}|sort|xargs) || _exite

__ssh "${users[${_ANSWER}]}" "${ips[${_ANSWER}]}" "${ports[${_ANSWER}]}"
